{"version":3,"sources":["components/navbar/NavbarElements.js","components/navbar/index.js","components/chart/Chart.jsx","components/parameterinfo/Parameterinfo.jsx","Pages/Graphic/Graphic.jsx","components/pilihtanggal/Pilihtanggal.jsx","components/Tabel/Tabel.jsx","Pages/LogData/Logdata.jsx","App.js","serviceWorkerRegistration.js","index.js"],"names":["Nav","styled","nav","NavLink","Link","NavMenu","div","Navbar","to","activeStyle","Chart","data","name","Suhu","className","ResponsiveContainer","width","aspect","LineChart","XAxis","dataKey","stroke","Line","type","Tooltip","CartesianGrid","strokeDasharray","Parameterinfo","Graphic","Pilihtanggal","useState","selectedDate","setSelectedDate","ClassName","placeholderText","selected","onChange","date","Tabel","React","page","setPage","rowsPerPage","setRowsPerPage","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","tanggal","waktu","suhu","pH","tekanan","status","rows","Paper","sx","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","slice","row","hover","role","tabIndex","code","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","Logdata","App","exact","path","element","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ce35faa8.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport {NavLink as Link} from 'react-router-dom'\r\n\r\n\r\nexport const Nav = styled.nav`\r\n  background-color:mintcream;\r\n  height: 80px;\r\n  display: flexbox;\r\n  position: sticky;\r\n  z-index: 10;\r\n  justify-content: space-evenly;\r\n\r\n`\r\nexport const NavLink = styled(Link)`\r\n    font-weight: bold;\r\n    color:grey;\r\n    display:flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n    padding: 0 1rem;\r\n    height: 100%\r\n    cursor: PointerEvent;\r\n\r\n    &.active{\r\n        color: black;\r\n    }\r\n`\r\nexport const NavMenu = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: -24px;\r\n`","import React from 'react'\r\nimport{Nav, NavLink, NavMenu} from \"./NavbarElements\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n         <Nav>\r\n         <h1>SmartBiogas</h1>\r\n            <NavLink to=\"/\">\r\n                Grafik\r\n            </NavLink>\r\n            <NavMenu>\r\n                <NavLink to=\"/logdata\" activeStyle>\r\n                    Data Historis\r\n                </NavLink>\r\n            </NavMenu>\r\n         </Nav>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import \"./chart.css\"\r\nimport { LineChart, XAxis, Line, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function Chart() {\r\n    const data = [\r\n        {\r\n          name: '12.00',\r\n          Suhu: 29.6,\r\n        },\r\n        {\r\n          name: '13.00',\r\n          Suhu: 29.8,\r\n        },\r\n        {\r\n          name: '14.00',\r\n          Suhu: 31.3,\r\n        },\r\n        {\r\n          name: '15.00',\r\n          Suhu: 31.5,\r\n        },\r\n        {\r\n          name: '17.00',\r\n          Suhu: 33.6,\r\n        },\r\n        {\r\n          name: '18.00',\r\n          Suhu: 34.2,\r\n        },\r\n        {\r\n          name: '19.00',\r\n          Suhu: 34.8,\r\n        },\r\n      ];\r\n      \r\n    return (\r\n      <div className=\"chart\">\r\n        <div className=\"chartSuhu\">\r\n            <h3 className=\"chartTitle\">Suhu Slurry</h3>\r\n            <ResponsiveContainer width=\"100%\" aspect={4/1}>\r\n                <LineChart data={data}>\r\n                    <XAxis dataKey=\"name\" stroke=\"#5550bd\"/>\r\n                    <Line type=\"monotone\" dataKey=\"Suhu\" stroke=\"#5550bd\"/>\r\n                    <Tooltip/>\r\n                    <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\"/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"chartpH\">\r\n            <h3 className=\"chartTitle\">pH Slurry</h3>\r\n            <ResponsiveContainer width=\"100%\" aspect={4/1}>\r\n                <LineChart data={data}>\r\n                    <XAxis dataKey=\"name\" stroke=\"#5550bd\"/>\r\n                    <Line type=\"monotone\" dataKey=\"Suhu\" stroke=\"#5550bd\"/>\r\n                    <Tooltip/>\r\n                    <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\"/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"chartTekanan\">\r\n            <h3 className=\"chartTitle\">Tekanan Gas</h3>\r\n            <ResponsiveContainer width=\"100%\" aspect={4/1}>\r\n                <LineChart data={data}>\r\n                    <XAxis dataKey=\"name\" stroke=\"#5550bd\"/>\r\n                    <Line type=\"monotone\" dataKey=\"Suhu\" stroke=\"#5550bd\"/>\r\n                    <Tooltip/>\r\n                    <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\"/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import \"./parameterinfo.css\"\r\n\r\nexport default function Parameterinfo() {\r\n    return (\r\n        <div className=\"parameter\">\r\n            <div className=\"parameterItem\">\r\n                <span className=\"parameterTitle\">Suhu Slurry</span>\r\n                <div className=\"nilaiParameter\">\r\n                    <span className=\"Data\">33.25 C</span>\r\n                </div>\r\n                <div><span className=\"tanggal\">5 November 2021</span></div>\r\n                <span className=\"waktu\">12.00</span>\r\n            </div> \r\n            <div className=\"parameterItem\">\r\n                <span className=\"parameterTitle\">pH Slurry</span>\r\n                <div className=\"nilaiParameter\">\r\n                    <span className=\"Data\">7.1</span>\r\n                </div>\r\n                <div><span className=\"tanggal\">5 November 2021</span></div>\r\n                <span className=\"waktu\">12.00</span>\r\n            </div> \r\n            <div className=\"parameterItem\">\r\n                <span className=\"parameterTitle\">Tekanan Gas</span>\r\n                <div className=\"nilaiParameter\">\r\n                    <span className=\"Data\">75 KPa</span>\r\n                </div>\r\n                <div><span className=\"tanggal\">5 November 2021</span></div>\r\n                <span className=\"waktu\">12.00</span>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n","import Chart from \"../../components/chart/Chart\"\r\nimport Parameterinfo from \"../../components/parameterinfo/Parameterinfo\"\r\nimport \"./graphic.css\"\r\n\r\nexport default function Graphic() {\r\n    return (\r\n        <div className= \"graphic\">\r\n            <Parameterinfo />\r\n            <Chart />\r\n        </div>\r\n    )\r\n}\r\n","import \"./pilihtanggal.css\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport DatePicker from 'react-datepicker'\r\nimport {useState} from 'react'\r\n\r\n\r\nexport default function Pilihtanggal() {\r\n    const [selectedDate, setSelectedDate] = useState()\r\n    return (\r\n        <div ClassName=\"pilihtanggal\">\r\n            <DatePicker placeholderText=\"Masukan Tanggal\" \r\n                selected={selectedDate}\r\n                onChange={date => setSelectedDate(date)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import \"./tabel.css\"\r\nimport * as React from 'react';\r\nimport {Paper,Table,TableBody,TableCell,TableContainer,TableHead,TablePagination,TableRow} from '@mui/material';\r\n\r\nexport default function Tabel() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    const columns = [\r\n        { id: 'tanggal', label: 'Tanggal', minWidth: 170 },\r\n        { id: 'waktu', label: 'Waktu', minWidth: 100 },\r\n        {\r\n          id: 'suhu',\r\n          label: 'Suhu\\u00a0Slurry',\r\n          minWidth: 170,\r\n          align: 'right',\r\n          format: (value) => value.toLocaleString('en-US'),\r\n        },\r\n        {\r\n          id: 'pH',\r\n          label: 'pH\\u00a0Slurry',\r\n          minWidth: 170,\r\n          align: 'right',\r\n          format: (value) => value.toLocaleString('en-US'),\r\n        },\r\n        {\r\n          id: 'tekanan',\r\n          label: 'Tekanan\\u00a0Gas',\r\n          minWidth: 170,\r\n          align: 'right',\r\n          format: (value) => value.toFixed(2),\r\n        },\r\n        {\r\n          id: 'status',\r\n          label: 'Status',\r\n          minWidth: 170,\r\n          align: 'right',\r\n          format: (value) => value.toFixed(2),\r\n        },\r\n      ];\r\n      \r\n      function createData(tanggal, waktu, suhu, pH, tekanan,status) {\r\n        return { tanggal, waktu, suhu, pH, tekanan, status };\r\n      }\r\n      \r\n      const rows = [\r\n        createData('21 November 2021', '13.00', 29.8, 6.8, 2000),\r\n        createData('21 November 2021', '13.00', 29.8, 6.8, 2000),\r\n        createData('21 November 2021', '13.00', 29.8, 6.8, 2000),\r\n        createData('21 November 2021', '13.00', 29.8, 6.8, 2000),\r\n        createData('21 November 2021', '13.00', 29.8, 6.8, 2000),\r\n        createData('21 November 2021', '13.00', 29.8, 6.8, 2000),\r\n        createData('21 November 2021', '13.00', 29.8, 6.8, 2000),\r\n        createData('21 November 2021', '13.00', 29.8, 6.8, 2000),\r\n        createData('21 November 2021', '13.00', 29.8, 6.8, 2000),\r\n      ];\r\n      \r\n    return (\r\n        <div ClassName=\"Tabel\">\r\n            <div ClassName=\"DataLog\">\r\n            <h3 className=\"TableTitle\">Data Historis</h3>\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n        <TableContainer sx={{ maxHeight: 440 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                {columns.map((column) => (\r\n                    <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                    >\r\n                    {column.label}\r\n                    </TableCell>\r\n                ))}\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => {\r\n                    return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value === 'number'\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                        );\r\n                        })}\r\n                    </TableRow>\r\n                    );\r\n                })}\r\n            </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n        </Paper>     \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","\r\nimport Pilihtanggal from \"../../components/pilihtanggal/Pilihtanggal\"\r\nimport Tabel from \"../../components/Tabel/Tabel\"\r\nimport \"./logdata.css\"\r\n\r\nexport default function Logdata() {\r\n    return (\r\n        <div className=\"logdata\">\r\n            <Pilihtanggal />\r\n            <Tabel />\r\n        </div>\r\n    )\r\n }","import {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  } from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\nimport Graphic from \"./Pages/Graphic/Graphic\";\nimport Logdata from \"./Pages/LogData/Logdata\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route exact path=\"/\" element={<Graphic />}/>\n        <Route exact path=\"/logdata\" element={<Logdata />}/>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}